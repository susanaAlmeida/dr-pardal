@mixin large-screens(){
  @media only screen and (max-width: 960px){
    @content;
  }
}

@mixin warning {
    background-color: orange;
    color: #fff;
    &:hover {
      background-color: lighten(orange, 10%);
    }
  }


@mixin conf($args...) {
  $value: conf($args...);

  @if type-of($value) == 'map' {
    $keys: map-keys($value);

    @each $key in $keys {
      $property-value: map-get($value, $key);

      @if type-of($property-value) != 'map' {
        #{$key}: $property-value;
      }
    }
  }
}

@mixin left-container() {
  flex: 0 0 33.33%;
}

@mixin right-container() {
  flex: 0 0 66.67%;
}

@mixin centering-container() {
  align-items: flex-start;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

@mixin background-cover() {
  background-size: cover;
  background-position: center;
}

@mixin unstyle-list() {
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin image2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image);

    background-size: $width $height;
  }
}

@mixin font-size($size: $em-base, $line-height: null) {
  font-size: $size * 1px;
  font-size: rem($size);

  @if $line-height != null {
    line-height: $line-height * 1px;
    line-height: rem($line-height);
  }
}
